# Multi-stage build for Nix-based projects
FROM nixos/nix:latest AS builder

# Copy monorepo
COPY {{MONOREPO_PATH}} /opt/{{PROJECT_NAME}}
WORKDIR /opt/{{PROJECT_NAME}}

# Detect and use flake.nix for building frontend and backend
RUN if [ -f flake.nix ]; then \
      nix --extra-experimental-features "nix-command flakes" develop --command bash -c "{{FRONTEND_BUILD_CMD}}" && \
      echo "Frontend build completed successfully"; \
    else \
      echo "Error: flake.nix not found" && exit 1; \
    fi

# Final image
FROM nginx:alpine

# Install required packages
RUN apk add --no-cache curl supervisor bash nix

# Create required directories
RUN mkdir -p /etc/nginx/conf.d \
    && mkdir -p /usr/share/nginx/html \
    && mkdir -p /var/log/nginx \
    && mkdir -p /opt/backend \
    && mkdir -p /etc/supervisor/conf.d

# Copy built frontend from builder stage
COPY --from=builder /opt/{{PROJECT_NAME}}/{{FRONTEND_PATH}}/{{FRONTEND_BUILD_DIR}} /usr/share/nginx/html

# Copy backend code
COPY --from=builder /opt/{{PROJECT_NAME}}/{{BACKEND_PATH}} /opt/backend

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf
COPY conf.d/ /etc/nginx/conf.d/

# Copy supervisord configuration
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Copy health check page
COPY html/health/ /usr/share/nginx/html/health/

# Set permissions
RUN chown -R nginx:nginx /var/log/nginx \
    && chown -R nginx:nginx /usr/share/nginx/html \
    && chmod -R 755 /var/log/nginx

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD curl -f http://localhost/health/ || exit 1

# Expose port
EXPOSE 80

# Start supervisord
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"] 