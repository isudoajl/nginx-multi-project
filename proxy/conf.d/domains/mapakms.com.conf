# Domain configuration for mapakms.com
# Generated automatically for project: mapa-kms

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mapakms.com www.mapakms.com;
    
    # SSL certificates
    ssl_certificate /etc/nginx/certs/mapakms.com/cert.pem;
    ssl_certificate_key /etc/nginx/certs/mapakms.com/cert-key.pem;
    
    # Include SSL settings
    include /etc/nginx/conf.d/ssl-settings.conf;
    
    # Include security headers
    include /etc/nginx/conf.d/security-headers.conf;
    
    # Security rules from variables defined in security-headers.conf
    if ($bad_bot = 1) {
        return 444;
    }

    if ($method_allowed = 0) {
        return 444;
    }
    
    # Apply rate limiting
    limit_req zone=securitylimit burst=20 nodelay;
    limit_conn securityconn 20;
    
    # Proxy to project container
    location / {
        proxy_pass http://10.89.1.4:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://10.89.1.4:80/health;
        access_log off;
    }
    
    # Custom error handling
    error_page 502 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name mapakms.com www.mapakms.com;
    
    # Apply rate limiting to HTTP as well
    limit_req zone=securitylimit burst=20 nodelay;
    limit_conn securityconn 20;
    
    return 301 https://$server_name$request_uri;
}
